{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlos\\\\documents\\\\react_apps\\\\meteologica_app\\\\client\\\\src\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import Plot from 'react-plotly.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    //here Im fetching data from Express server specified endpoint \n    const data = await fetch(\"/data\");\n\n    const _data = await data.json();\n\n    setItems(_data.temperature.values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: each.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: each.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/carlos/documents/react_apps/meteologica_app/client/src/components/Chart.js"],"names":["React","useEffect","useState","Chart","items","setItems","fetchData","data","fetch","_data","json","temperature","values","map","each","time","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC,C,CACA;;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,SAAS;AACV,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMA,SAAS,GAAG,YAAW;AAE3B;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAxB;;AACA,UAAMC,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;;AACAL,IAAAA,QAAQ,CAACI,KAAK,CAACE,WAAN,CAAkBC,MAAnB,CAAR;AAED,GAPD;;AAWA,sBACI;AAAA,cAUCR,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACP;AAAA,8BACA;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAVD;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxCuBb,K;;KAAAA,K","sourcesContent":["import React, {useEffect,useState} from 'react';\r\n// import Plot from 'react-plotly.js'\r\n\r\n\r\nexport default function Chart() {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      fetchData();\r\n    },[])\r\n  \r\n  \r\n    const fetchData = async () =>{\r\n\r\n      //here Im fetching data from Express server specified endpoint \r\n      const data = await fetch(\"/data\"); \r\n      const _data = await data.json();\r\n      setItems(_data.temperature.values);\r\n      \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Plot\r\n                data={[\r\n                    {\r\n                        type:'scatter',\r\n                        mode:'lines',\r\n                        x:\r\n                    }\r\n                ]}\r\n            /> */}\r\n        {items.map((each)=>(\r\n            <div>\r\n            <p>{each.time}</p>\r\n            <p>{each.value}</p>\r\n            </div>\r\n         ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}