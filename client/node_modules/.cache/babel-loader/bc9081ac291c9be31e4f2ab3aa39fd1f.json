{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlos\\\\documents\\\\react_apps\\\\meteologica_app\\\\client\\\\src\\\\components\\\\Chart.js\";\n// import React, { useState, useEffect } from \"react\";\n// import socketIOClient from \"socket.io-client\";\n// import Plotly from 'plotly.js-basic-dist';\n// import createPlotlyComponent from 'react-plotly.js/factory';\n// const Plot = createPlotlyComponent(Plotly);\n// const ENDPOINT = \"http://127.0.0.1:4001\";\n// function App() {\n//     const [temperatures, setTemperatures] = useState([]);\n//     const [power, setPower] = useState([]);\n//     const makeAxis = (rawData) =>{\n//         const xAxis = rawData.map((each)=>(\n//             each.time\n//         ))\n//         const yAxis = rawData.map((each)=>(\n//             each.value\n//         ))\n//         const plotData = [xAxis,yAxis]\n//         return plotData;\n//     } \n//   useEffect(() => {\n//     const socket = socketIOClient(ENDPOINT);\n//     socket.on(\"FromAPI\", updatedTemperature => {\n//         setTemperatures(updatedTemperature)\n//     });\n//   }, []);\n//   return (\n//     <div>\n//         {console.log(temperatures)}\n//         <Plot\n//             data={[\n//                 {\n//                     type:'scatter',\n//                     mode:'lines',\n//                     x:makeAxis(temperatures)[0],\n//                     y:makeAxis(temperatures)[1]\n//                 }\n//             ]}\n//         />\n//         {temperatures.map(each=>{\n//             return <p key={each.time}>{each.time}</p>\n//         })}\n//     </div>\n//   );\n// }\n// export default App;\n// FUNCIONANDO EN COMPONENTE CLASE\nimport React, { Component } from \"react\"; // import Plotly from 'plotly.js-basic-dist';\n// import createPlotlyComponent from 'react-plotly.js/factory';\n\nimport socketIOClient from \"socket.io-client\"; // const Plot = createPlotlyComponent(Plotly);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      response: false,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      endpoint\n    } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", updatedTemperatures => this.setState({\n      response: updatedTemperatures\n    }));\n  }\n\n  render() {\n    const {\n      response\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: response ? response.map(obj => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"time : \", obj.time]\n        }, obj.time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App; // TOMAR DE AQUI EL PLOT\n//   import React, {useEffect,useState} from 'react';\n// export default function Chart() {\n//     const [temperatures, setTemperatures] = useState([]);\n//     const [power, setPower] = useState([]);\n//     useEffect(()=>{\n//       fetchData();\n//     },[])\n//     const fetchData = async () =>{\n//       //here Im fetching data from Express server specified endpoint \n//       const data = await fetch(\"/data\"); \n//       const _data = await data.json();\n//       setTemperatures(_data.temperature.values);\n//       setPower(_data.power.values)\n//     }\n//     const makeAxis = (rawData) =>{\n//         const xAxis = rawData.map((each)=>(\n//             each.time\n//         ))\n//         const yAxis = rawData.map((each)=>(\n//             each.value\n//         ))\n//         const plotData = [xAxis,yAxis]\n//         return plotData;\n//     } \n//     return (\n//         <div>\n//             <Plot\n//                 data={[\n//                     {\n//                         type:'scatter',\n//                         mode:'lines',\n//                         x:makeAxis(temperatures)[0],\n//                         y:makeAxis(temperatures)[1]\n//                     }\n//                 ]}\n//             />\n//             <Plot\n//                 data={[\n//                     {\n//                         type:'scatter',\n//                         mode:'lines',\n//                         x:makeAxis(power)[0],\n//                         y:makeAxis(power)[1]\n//                     }\n//                 ]}\n//             />\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/carlos/documents/react_apps/meteologica_app/client/src/components/Chart.js"],"names":["React","Component","socketIOClient","App","constructor","state","response","endpoint","componentDidMount","socket","on","updatedTemperatures","setState","render","textAlign","map","obj","time"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACHC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAED,MAAAA;AAAF,QAAe,KAAKF,KAA1B;AACA,UAAMI,MAAM,GAAGP,cAAc,CAACK,QAAD,CAA7B;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqBC,mBAAmB,IAAI,KAAKC,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAEK;AAAZ,KAAd,CAA5C;AACD;;AACHE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBACGR,QAAQ,GACLA,QAAQ,CAACS,GAAT,CAAcC,GAAD,IAAO;AAClB,4BAAO;AAAA,gCAA0BA,GAAG,CAACC,IAA9B;AAAA,WAAQD,GAAG,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CADK,gBAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAxBuB;;AA0B1B,eAAed,GAAf,C,CAIF;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import socketIOClient from \"socket.io-client\";\r\n// import Plotly from 'plotly.js-basic-dist';\r\n// import createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\n// const Plot = createPlotlyComponent(Plotly);\r\n// const ENDPOINT = \"http://127.0.0.1:4001\";\r\n\r\n\r\n// function App() {\r\n\r\n//     const [temperatures, setTemperatures] = useState([]);\r\n//     const [power, setPower] = useState([]);\r\n\r\n\r\n//     const makeAxis = (rawData) =>{\r\n//         const xAxis = rawData.map((each)=>(\r\n//             each.time\r\n//         ))\r\n//         const yAxis = rawData.map((each)=>(\r\n//             each.value\r\n//         ))\r\n//         const plotData = [xAxis,yAxis]\r\n\r\n//         return plotData;\r\n//     } \r\n\r\n//   useEffect(() => {\r\n//     const socket = socketIOClient(ENDPOINT);\r\n//     socket.on(\"FromAPI\", updatedTemperature => {\r\n//         setTemperatures(updatedTemperature)\r\n//     });\r\n//   }, []);\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//         {console.log(temperatures)}\r\n//         <Plot\r\n//             data={[\r\n//                 {\r\n//                     type:'scatter',\r\n//                     mode:'lines',\r\n//                     x:makeAxis(temperatures)[0],\r\n//                     y:makeAxis(temperatures)[1]\r\n//                 }\r\n//             ]}\r\n//         />\r\n//         {temperatures.map(each=>{\r\n//             return <p key={each.time}>{each.time}</p>\r\n//         })}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// FUNCIONANDO EN COMPONENTE CLASE\r\n\r\n\r\nimport React, { Component } from \"react\";\r\n// import Plotly from 'plotly.js-basic-dist';\r\n// import createPlotlyComponent from 'react-plotly.js/factory';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\n// const Plot = createPlotlyComponent(Plotly);\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        response: false,\r\n        endpoint: \"http://127.0.0.1:4001\"\r\n      };\r\n    }\r\n  componentDidMount() {\r\n      const { endpoint } = this.state;\r\n      const socket = socketIOClient(endpoint);\r\n      socket.on(\"FromAPI\", updatedTemperatures => this.setState({ response: updatedTemperatures }));\r\n    }\r\n  render() {\r\n      const { response } = this.state;\r\n      return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          {response ?\r\n              response.map((obj)=>{\r\n                return <p key={obj.time}>time : {obj.time}</p>\r\n              })\r\n          : <p>Loading...</p>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default App;\r\n\r\n\r\n\r\n// TOMAR DE AQUI EL PLOT\r\n\r\n\r\n\r\n\r\n//   import React, {useEffect,useState} from 'react';\r\n\r\n\r\n// export default function Chart() {\r\n\r\n//     const [temperatures, setTemperatures] = useState([]);\r\n//     const [power, setPower] = useState([]);\r\n\r\n//     useEffect(()=>{\r\n//       fetchData();\r\n//     },[])\r\n\r\n  \r\n//     const fetchData = async () =>{\r\n//       //here Im fetching data from Express server specified endpoint \r\n//       const data = await fetch(\"/data\"); \r\n//       const _data = await data.json();\r\n//       setTemperatures(_data.temperature.values);\r\n//       setPower(_data.power.values)\r\n//     }\r\n\r\n//     const makeAxis = (rawData) =>{\r\n//         const xAxis = rawData.map((each)=>(\r\n//             each.time\r\n//         ))\r\n//         const yAxis = rawData.map((each)=>(\r\n//             each.value\r\n//         ))\r\n//         const plotData = [xAxis,yAxis]\r\n\r\n//         return plotData;\r\n//     } \r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Plot\r\n//                 data={[\r\n//                     {\r\n//                         type:'scatter',\r\n//                         mode:'lines',\r\n//                         x:makeAxis(temperatures)[0],\r\n//                         y:makeAxis(temperatures)[1]\r\n//                     }\r\n//                 ]}\r\n//             />\r\n//             <Plot\r\n//                 data={[\r\n//                     {\r\n//                         type:'scatter',\r\n//                         mode:'lines',\r\n//                         x:makeAxis(power)[0],\r\n//                         y:makeAxis(power)[1]\r\n//                     }\r\n//                 ]}\r\n//             />\r\n//         </div>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}