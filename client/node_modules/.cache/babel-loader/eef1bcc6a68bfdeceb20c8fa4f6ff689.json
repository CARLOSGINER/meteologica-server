{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlos\\\\documents\\\\react_apps\\\\meteologica_app\\\\client\\\\src\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Plotly from 'plotly.js-basic-dist';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\nexport default function Chart() {\n  _s();\n\n  const [temperatures, setTemperatures] = useState([]);\n  const [power, setPower] = useState([]);\n  const [response, setResponse] = useState(false);\n  const [endpoint, setEndpoint] = useState(\"http://127.0.0.1:4001\");\n  useEffect(() => {\n    const socket = socketIOClient(endpoint);\n    socket.on(\"FromAPI\", data => setResponse(data));\n    console.log(response);\n  }, [endpoint, response]); // useEffect(()=>{\n  //   fetchData();\n  // },[])\n  // const fetchData = async () =>{\n  //   //here Im fetching data from Express server specified endpoint \n  //   const data = await fetch(\"/data\"); \n  //   const _data = await data.json();\n  //   setTemperatures(_data.temperature.values);\n  //   setPower(_data.power.values)\n  // }\n\n  const makeAxis = rawData => {\n    const xAxis = rawData.map(each => each.time);\n    const yAxis = rawData.map(each => each.value);\n    const plotData = [xAxis, yAxis];\n    return plotData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"dWz/5BUt7bMDvo5cwPSrd2+9bF8=\");\n\n_c2 = Chart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"Chart\");","map":{"version":3,"sources":["C:/Users/carlos/documents/react_apps/meteologica_app/client/src/components/Chart.js"],"names":["React","useEffect","useState","socketIOClient","Plotly","createPlotlyComponent","Plot","Chart","temperatures","setTemperatures","power","setPower","response","setResponse","endpoint","setEndpoint","socket","on","data","console","log","makeAxis","rawData","xAxis","map","each","time","yAxis","value","plotData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AACA,MAAMC,IAAI,GAAGD,qBAAqB,CAACD,MAAD,CAAlC;KAAME,I;AAGN,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,uBAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMe,MAAM,GAAGb,cAAc,CAACW,QAAD,CAA7B;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAQL,WAAW,CAACK,IAAD,CAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,GAJQ,EAIP,CAACE,QAAD,EAAUF,QAAV,CAJO,CAAT,CAP4B,CAa5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,QAAQ,GAAIC,OAAD,IAAY;AACzB,UAAMC,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAaC,IAAD,IACtBA,IAAI,CAACC,IADK,CAAd;AAGA,UAAMC,KAAK,GAAGL,OAAO,CAACE,GAAR,CAAaC,IAAD,IACtBA,IAAI,CAACG,KADK,CAAd;AAGA,UAAMC,QAAQ,GAAG,CAACN,KAAD,EAAOI,KAAP,CAAjB;AAEA,WAAOE,QAAP;AACH,GAVD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA9DuBtB,K;;MAAAA,K","sourcesContent":["import React, {useEffect,useState} from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport Plotly from 'plotly.js-basic-dist';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\n\r\nexport default function Chart() {\r\n\r\n    const [temperatures, setTemperatures] = useState([]);\r\n    const [power, setPower] = useState([]);\r\n    const [response, setResponse] = useState(false);\r\n    const [endpoint, setEndpoint] = useState(\"http://127.0.0.1:4001\");\r\n\r\n    useEffect(()=>{\r\n        const socket = socketIOClient(endpoint);\r\n        socket.on(\"FromAPI\", (data)=>setResponse(data));\r\n        console.log(response)\r\n    },[endpoint,response])\r\n\r\n    // useEffect(()=>{\r\n    //   fetchData();\r\n    // },[])\r\n  \r\n    // const fetchData = async () =>{\r\n    //   //here Im fetching data from Express server specified endpoint \r\n    //   const data = await fetch(\"/data\"); \r\n    //   const _data = await data.json();\r\n    //   setTemperatures(_data.temperature.values);\r\n    //   setPower(_data.power.values)\r\n    // }\r\n\r\n    const makeAxis = (rawData) =>{\r\n        const xAxis = rawData.map((each)=>(\r\n            each.time\r\n        ))\r\n        const yAxis = rawData.map((each)=>(\r\n            each.value\r\n        ))\r\n        const plotData = [xAxis,yAxis]\r\n\r\n        return plotData;\r\n    } \r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <Plot\r\n                data={[\r\n                    {\r\n                        type:'scatter',\r\n                        mode:'lines',\r\n                        x:makeAxis(temperatures)[0],\r\n                        y:makeAxis(temperatures)[1]\r\n                    }\r\n                ]}\r\n            />\r\n            <Plot\r\n                data={[\r\n                    {\r\n                        type:'scatter',\r\n                        mode:'lines',\r\n                        x:makeAxis(power)[0],\r\n                        y:makeAxis(power)[1]\r\n                    }\r\n                ]}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}